from scapy.all import *
from scapy.layers.inet import IP
from docx import Document
from docx.shared import Inches
import plotly.graph_objects as go
import io

def get_ip_stats(packets):
    ip_stats = {}
    for pkt in packets:
        if IP in pkt:
            src_ip = pkt[IP].src
            dst_ip = pkt[IP].dst
            if src_ip not in ip_stats:
                ip_stats[src_ip] = {'in': 0, 'out': 1}
            else:
                ip_stats[src_ip]['out'] += 1
            if dst_ip not in ip_stats:
                ip_stats[dst_ip] = {'in': 1, 'out': 0}
            else:
                ip_stats[dst_ip]['in'] += 1
    return ip_stats

def print_top_ips(ip_stats, top_n=5):
    sorted_ips = sorted(ip_stats.items(), key=lambda x: x[1]['in'] + x[1]['out'], reverse=True)
    print(f"Top {top_n} adresses IP par trafic:")
    for i, (ip, stats) in enumerate(sorted_ips[:top_n], start=1):
        print(f"{i}. {ip} - Paquets entrants: {stats['in']}, Paquets sortants: {stats['out']}")

def generate_report(ip_stats, top_n=5):
    sorted_ips = sorted(ip_stats.items(), key=lambda x: x[1]['in'] + x[1]['out'], reverse=True)
    top_ips = sorted_ips[:top_n]

    # Créer un nouveau document Word
    document = Document()

    # Ajouter un titre
    document.add_heading('Rapport d\'analyse de trafic réseau', 0)

    # Ajouter un paragraphe avec les informations sur les adresses IP les plus actives
    document.add_heading('Top {} adresses IP les plus actives'.format(top_n), level=1)
    for i, (ip, stats) in enumerate(top_ips, start=1):
        document.add_paragraph("{}. {} - Paquets entrants: {}, Paquets sortants: {}".format(
            i, ip, stats['in'], stats['out']))

    # Créer le graphique à barres avec Plotly
    ips = [ip for ip, _ in top_ips]
    incoming = [stats['in'] for _, stats in top_ips]
    outgoing = [stats['out'] for _, stats in top_ips]

    fig = go.Figure(data=[
        go.Bar(name='Paquets entrants', x=ips, y=incoming),
        go.Bar(name='Paquets sortants', x=ips, y=outgoing)
    ])
    fig.update_layout(
        title='Top {} adresses IP les plus actives'.format(top_n),
        xaxis_title='Adresse IP',
        yaxis_title='Nombre de paquets',
        barmode='group',
        height=400
    )

    # Enregistrer le graphique en tant qu'image
    img_bytes = fig.to_image(format="png")
    img_stream = io.BytesIO(img_bytes)

    # Ajouter le graphique au document Word
    document.add_picture(img_stream, width=Inches(6))

    # Enregistrer le document Word
    document.save('rapport_analyse_trafic.docx')
    print("Le rapport a été généré avec succès : rapport_analyse_trafic.docx")

# Charger le fichier PCAP
packets = rdpcap('wireshark/geoip.pcap')

# Obtenir les statistiques IP
ip_stats = get_ip_stats(packets)

# Afficher les 5 adresses IP les plus fréquentes
print_top_ips(ip_stats)

# Générer le rapport
generate_report(ip_stats)

