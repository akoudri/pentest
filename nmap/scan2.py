"""
On importe le module nmap.
On spécifie la cible à scanner, ici une adresse IP.
On initialise un objet PortScanner de nmap.
On configure les options du scan :
-sS pour effectuer un scan TCP SYN
--top-ports 1000 pour scanner les 1000 ports les plus courants
On lance le scan avec ces options sur la cible spécifiée.
On affiche des informations générales sur l'hôte comme son état (up, down).
On itère sur les protocoles détectés (tcp, udp).
Pour chaque protocole, on récupère les ports ouverts.
Pour chaque port ouvert, on affiche son numéro, son état et le service associé s'il est reconnu.
"""

import nmap

# Spécifier la cible
target = '192.168.1.1'

# Initialiser le scanner
nm = nmap.PortScanner()

# Spécifier les options du scan
# -sS : TCP SYN scan
# --top-ports 1000 : scanner les 1000 ports les plus courants
nm.scan(target, arguments='-sS --top-ports 1000')

# Afficher les informations sur l'hôte
print(f"Host : {target}")
print(f"State : {nm[target].state()}")

# Afficher les ports ouverts et les services associés
for proto in nm[target].all_protocols():
    print(f"Protocol : {proto}")

    lport = nm[target][proto].keys()

    for port in lport:
        print(f"port : {port}\tstate : {nm[target][proto][port]['state']}\tservice : {nm[target][proto][port]['name']}")