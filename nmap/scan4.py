"""
On importe le module nmap.
On spécifie le sous-réseau cible sous la forme d'un CIDR.
On initialise un objet PortScanner de nmap.
On configure les options du scan :
-sS pour effectuer un scan TCP SYN
-sV pour activer la détection de version
-p- pour scanner tous les ports
-f pour fragmenter les paquets (rend la détection plus difficile)
-D pour utiliser des leurres (adresses IP aléatoires) afin de dissimuler notre vraie IP
On lance le scan avec ces options sur le sous-réseau cible.
On parcourt les hôtes détectés.
Pour chaque hôte, on affiche son adresse IP, son nom d'hôte (s'il est disponible) et son état (up, down).
On itère sur les protocoles détectés (tcp, udp).
Pour chaque protocole, on récupère les ports ouverts.
Pour chaque port ouvert, on affiche son numéro, son état et la version du service s'il a été reconnu.
Ce script effectue donc un scan furtif sur le sous-réseau spécifié, en essayant de rester discret grâce à la fragmentation
des paquets et à l'utilisation de leurres. Il affiche ensuite les informations détaillées sur les hôtes actifs et leurs ports ouverts.
"""

import nmap

# Spécifier le sous-réseau cible
subnet = '192.168.1.0/24'

# Initialiser le scanner
nm = nmap.PortScanner()

# Spécifier les options du scan
# -sS : TCP SYN scan
# -sV : Détection de version
# -p- : Scanner tous les ports
# -f : Fragmentation des paquets
# -D : Utiliser des leurres (adresses IP aléatoires)
nm.scan(hosts=subnet, arguments='-sS -sV -p- -f -D 192.168.1.101,192.168.1.102')

# Parcourir les hôtes détectés
for host in nm.all_hosts():
    print('----------------------------------------------------')
    print('Host : %s (%s)' % (host, nm[host].hostname()))
    print('State : %s' % nm[host].state())

    for proto in nm[host].all_protocols():
        print('----------')
        print('Protocol : %s' % proto)

        lport = nm[host][proto].keys()

        for port in lport:
            print('port : %s\tstate : %s\tversion : %s' % (
            port, nm[host][proto][port]['state'], nm[host][proto][port]['version']))