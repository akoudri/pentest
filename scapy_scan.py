from scapy.all import *
from scapy.layers.inet import IP, TCP

# Define the target IP address
target_ip = "192.168.221.16"

# Create an IP packet with the target IP as the destination
ip_packet = IP(dst=target_ip)

# Create a list to store the open ports and services
open_ports = []

# Iterate through all ports (1-65535)
for port in range(1, 65536):
    # Create a TCP packet with the current port as the destination
    tcp_packet = TCP(dport=port, flags="S")

    # Combine the IP and TCP packets
    packet = ip_packet / tcp_packet

    # Send the packet and wait for a response
    response = sr1(packet, timeout=1, verbose=0)

    # Check if a response was received
    if response is not None and response.haslayer(TCP):
        # Extract the source port from the response
        src_port = response[TCP].sport

        # Create a new TCP packet with the ACK flag set
        ack_packet = TCP(dport=src_port, flags="A")

        # Send the ACK packet and wait for a response
        service_response = sr1(ip_packet / ack_packet, timeout=1, verbose=0)

        # Check if a service response was received and has a Raw layer
        if service_response is not None and service_response.haslayer(Raw):
            # Extract the service banner from the response
            banner = service_response[Raw].load.decode("utf-8", errors="ignore")

            # Append the port and service banner to the open_ports list
            open_ports.append((port, banner))

# Print the open ports and services
for port, banner in open_ports:
    print(f"Port {port} is open - Service: {banner.strip()}")